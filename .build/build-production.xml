<?xml version="1.0" encoding="UTF-8"?>
<project name="Сборка EasyCast для production-сервера" default="finish" basedir="../">
    <tstamp>
        <format property="current.time" pattern="dd.MM.yyyy_HHmm" />
    </tstamp>
    <!-- Указываем путь к Yii -->     
    <property name="yii.dir" value="../yiisoft/yii/"/>
    <!-- Указываем путь к ядру EasyCast -->   
    <property name="core.dir" value="/home/frost/git/easycast(core)/"/>
    <!-- Указываем путь к проекту с плагинами -->
    <property name="plugins.dir" value="/home/frost/git/easycast(plugins)/"/>
    <!-- Путь к папке с файлами для версии разработчика -->
    <property name="production.dir" value="."/>
    <!-- Репозиторий для  релиза -->
    <property name="release.dir" value="/home/frost/git/easycast(release)/"/>
    <!-- Папка с результатами сборки -->
    <property name="production_output.dir" value="/home/frost/tmp/release/easycast/PRODUCTION"/>
    
	<target name="clear-release-directory">
        <echo>Очищаем директорию для хранения релиза от старых файлов</echo>
        <delete includeemptydirs="true" deleteonexit="false">
              <fileset dir="${release.dir}">
                  <include name="**"/>
                  <exclude name=".project"/>
                  <exclude name=".gitignore"/>
                  <exclude name=".git"/>
              </fileset>
        </delete>
    </target>
    
    <target name="clear-output-directory" depends="clear-release-directory">
        <echo>Очищаем внешнюю папку от старых файлов</echo>
        <delete includeemptydirs="true" deleteonexit="false">
              <fileset dir="${production_output.dir}/">
                  <include name="**"/>
              </fileset>
        </delete>
    </target>

    <target name="copy-yii" depends="clear-output-directory">
        <echo>Копируем файлы Yii</echo>      
        <copy todir="${production_output.dir}" overwrite="true">
            <fileset dir="${yii.dir}">
                <include name="framework/**"/>
            </fileset>
        </copy>
    </target>
    
    <target name="adding-core" depends="copy-yii">
        <echo>Добавляем ядро проекта</echo>
        <copy todir="${production_output.dir}" overwrite="true">
            <fileset dir="${core.dir}">
                <include name="**"/>
            </fileset>
        </copy>
    </target>
    
    <target name="adding-plugins" depends="adding-core">
        <echo>Добавляем сторонние плагины</echo>
        <copy todir="${production_output.dir}" overwrite="true">
            <fileset dir="${plugins.dir}">
                <include name="**"/>
            </fileset>
        </copy>
    </target>
    
    <target name="minifying-scripts" depends="adding-plugins">
        <echo>Сжимаем скрипты и стили</echo>
        <!-- Выяснить как это сделать -->
    </target>
    
    <target name="setup-project-enviroment" depends="minifying-scripts">
        <echo>Устанавливаем настройки среды исполнения в режим production-сервера</echo>
        <copy todir="${production_output.dir}" overwrite="true">
            <fileset dir="${production.dir}">
                <include name="**"/>
            </fileset>
        </copy>
    </target>
    
    <target name="cleanup" depends="setup-project-enviroment">
        <echo>Удаление служебных файлов</echo>
    	<delete includeemptydirs="true" failonerror="false" deleteonexit="false">
            <fileset dir="${production_output.dir}" defaultexcludes="false">
                <include name="**/.*/**"/>
                <include name="**/.*"/>
                <exclude name="**/.htaccess"/>
            </fileset>
        </delete>
    </target>
	
	<target name="release" depends="cleanup">
        <echo>Загружаем все файлы в проект релизной сборки</echo>
        <copy todir="${release.dir}" overwrite="true">
            <fileset dir="${production_output.dir}/">
                <include name="**"/>
            </fileset>
        </copy>
    </target>
	
	<target name="zipzip" depends="release">
        <echo>Делаем zip-архив с файлами релизной сборки</echo>
		<zip destfile="${production_output.dir}/production_${current.time}.zip"
		       basedir="${production_output.dir}"
			   defaultexcludes="false"
		       update="true"/>
    </target>
    
    <target name="finish" depends="zipzip">
    	<echo>Release version successfully assembled.</echo>
        <echo>I'm ready to initiate deploying procedure, Commander.</echo>
    </target>
    
</project>